{"version":3,"sources":["simple-examples.js"],"names":["t","pass","promiseFn","Promise","resolve","value","true","cb","fn","test","end","map","result","is"],"mappings":";;AAAA;;AACA;;;;;;;AAEA,kBAAK,gBAAL,EAAsBA,KAAK;AACvBA,IAAEC,IAAF;AACH,CAFD;;AAIA,SAASC,SAAT,GAAqB;AACjB,SAAOC,QAAQC,OAAR,CAAgB,IAAhB,CAAP;AACH;;AAED,kBAAK,cAAL,EAAqB,MAAMJ,CAAN,IAAW;AAAA;;AAC5B,QAAMK,QAAQ,MAAMH,WAApB;AACAF,IAAEM,IAAF,uBAAOD,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAHD;;AAKA,SAASE,EAAT,CAAYC,EAAZ,EAAgB;AACZA;AACH;;AAEDC,aAAKF,EAAL,CAAQ,eAAR,EAAyBP,KAAK;AAC1BO,KAAG,MAAM;AACLP,MAAEC,IAAF;AACAD,MAAEU,GAAF;AACH,GAHD;AAIH,CALD;;AAOA,kBAAK,iBAAL,EAAwBV,KAAK;AACzB,SAAO,cAAG,CAAC,MAAD,CAAH,EACFW,GADE,CACEC,UAAUZ,EAAEa,EAAF,CAAKD,MAAL,EAAa,MAAb,CADZ,CAAP;AAEH,CAHD","sourcesContent":["import test from 'ava';\nimport { of } from 'rxjs'\n\ntest('Test Example 1',t => {\n    t.pass()\n})\n\nfunction promiseFn() {\n    return Promise.resolve(true)\n}\n\ntest(\"Promise test\", async t => {\n    const value = await promiseFn();\n    t.true(value);\n});\n\nfunction cb(fn) {\n    fn()\n}\n\ntest.cb(\"Callback Test\", t => {\n    cb(() => {\n        t.pass()\n        t.end()\n    })\n})\n\ntest('Observable Test', t => {\n    return of([\"test\"])\n        .map(result => t.is(result, \"test\"))\n})\n\n"]}